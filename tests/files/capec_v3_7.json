{
  "type": "bundle",
  "id": "bundle--03b21dae-9d28-46f0-b86c-fd192974facc",
  "objects": [
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary engages in fingerprinting activities to determine the type or version of an application installed on a remote target.",
      "external_references": [
        {
          "external_id": "CAPEC-541",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/541.html"
        }
      ],
      "id": "attack-pattern--e7eec058-4cd9-4fa0-8784-ed961d8d7290",
      "modified": "2014-06-23T00:00:00.000Z",
      "name": "Application Fingerprinting",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--76e6fe1e-34f2-40cd-8f12-f4d4f9c41808"
      ],
      "x_capec_domains": [
        "Software"
      ],
      "x_capec_parent_of_refs": [
        "attack-pattern--0cf857f6-afa4-4f0c-850f-58a4f11df157",
        "attack-pattern--8b7dfd02-8d21-4eed-a2a3-d9f73ed49a48",
        "attack-pattern--29e8786c-a791-44c6-b1de-950cf0604643"
      ],
      "x_capec_prerequisites": [
        "None"
      ],
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Low",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An attacker changes the behavior or state of a targeted application through injecting data or command syntax through the targets use of non-validated and non-filtered arguments of exposed services or methods.",
      "external_references": [
        {
          "external_id": "CAPEC-6",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/6.html"
        },
        {
          "external_id": "CWE-74",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/74.html"
        },
        {
          "external_id": "CWE-146",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/146.html"
        },
        {
          "external_id": "CWE-184",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/184.html"
        },
        {
          "external_id": "CWE-78",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/78.html"
        },
        {
          "external_id": "CWE-185",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/185.html"
        },
        {
          "external_id": "CWE-697",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/697.html"
        },
        {
          "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
          "external_id": "REF-1",
          "source_name": "reference_from_CAPEC"
        },
        {
          "description": "Jouko Pynnonen, Java Web Start argument injection vulnerability",
          "external_id": "REF-482",
          "source_name": "reference_from_CAPEC",
          "url": "http://www.securityfocus.com/archive/1/393696"
        }
      ],
      "id": "attack-pattern--b97b706c-8b6e-4681-a22b-89d5e53134b7",
      "modified": "2021-06-24T00:00:00.000Z",
      "name": "Argument Injection",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--cde07b71-23e6-418d-93e9-665f5f83b032"
      ],
      "x_capec_consequences": {
        "Access_Control": [
          "Gain Privileges"
        ],
        "Authorization": [
          "Gain Privileges"
        ],
        "Confidentiality": [
          "Gain Privileges",
          "Read Data"
        ],
        "Integrity": [
          "Modify Data"
        ]
      },
      "x_capec_domains": [
        "Software"
      ],
      "x_capec_example_instances": [
        "A recent example instance of argument injection occurred against Java Web Start technology, which eases the client side deployment for Java programs. The JNLP files that are used to describe the properties for the program. The client side Java runtime used the arguments in the property setting to define execution parameters, but if the attacker appends commands to an otherwise legitimate property file, then these commands are sent to the client command shell. [REF-482]"
      ],
      "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Discovery of potential injection vectors: </b>Using an automated tool or manual discovery, the attacker identifies services or methods with arguments that could potentially be used as injection vectors (OS, API, SQL procedures, etc.).</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Manually cover the application and record the possible places where arguments could be passed into external systems.</td></tr><tr><td>Use a spider, for web applications, to create a list of URLs and associated inputs.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>1. Attempt variations on argument content: </b>Possibly using an automated tool, the attacker will perform injection variations of the arguments.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use a very large list of probe strings in order to detect if there is a positive result, and, what type of system has been targeted (if obscure).</td></tr><tr><td>Use a proxy tool to record results, error messages and/or log if accessible.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Abuse of the application: </b>The attacker injects specific syntax into a particular argument in order to generate a specific malicious effect in the targeted application.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Manually inject specific payload into targeted argument.</td></tr></tbody></table></ol></div>",
      "x_capec_likelihood_of_attack": "High",
      "x_capec_prerequisites": [
        "Target software fails to strip all user-supplied input of any content that could cause the shell to perform unexpected actions.",
        "Software must allow for unvalidated or unfiltered input to be executed on operating system shell, and, optionally, the system configuration must allow for output to be sent back to client."
      ],
      "x_capec_resources_required": [
        "Ability to communicate synchronously or asynchronously with server. Optionally, ability to capture output directly through synchronous communication or other method such as FTP."
      ],
      "x_capec_skills_required": {
        "Medium": "The attacker has to identify injection vector, identify the operating system-specific commands, and optionally collect the output."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "High",
      "x_capec_version": "3.7"
    },
    {
      "created": "2015-11-09T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "\n            <xhtml:p>An adversary modifies file contents by adding data to files for several reasons. Many different attacks could “follow” this pattern resulting in numerous outcomes. Adding data to a file could also result in a Denial of Service condition for devices with limited storage capacity.</xhtml:p>\n         ",
      "external_references": [
        {
          "external_id": "CAPEC-572",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/572.html"
        },
        {
          "description": "Obfuscated Files or Information:Binary Padding",
          "external_id": "T1027.001",
          "source_name": "ATTACK",
          "url": "https://attack.mitre.org/wiki/Technique/T1027/001"
        }
      ],
      "id": "attack-pattern--31b90554-68d8-4950-ac45-89c915a30716",
      "modified": "2021-06-24T00:00:00.000Z",
      "name": "Artificially Inflate File Sizes",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--f8533ce1-5f23-4660-8f70-1a05af2c70d3"
      ],
      "x_capec_consequences": {
        "Availability": [
          "Resource Consumption (Denial of Service)"
        ],
        "Integrity": [
          "Modify Data"
        ]
      },
      "x_capec_domains": [
        "Software"
      ],
      "x_capec_example_instances": [
        "\n               <xhtml:p>An adversary could potentially increase file sizes on devices containing limited storage resources, such as SCADA or IOT devices, resulting in denial of service conditions.</xhtml:p>\n            "
      ],
      "x_capec_likelihood_of_attack": "High",
      "x_capec_parent_of_refs": [
        "attack-pattern--cbe9fd1f-4b5d-4a3c-b20b-e49888457338"
      ],
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Medium",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An attacker with access to the development environment process of an application-specific integrated circuit (ASIC) for a victim system being developed or maintained after initial deployment can insert malicious functionality into the system for the purpose of disruption or further compromise.",
      "external_references": [
        {
          "external_id": "CAPEC-539",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/539.html"
        },
        {
          "description": "John F. Miller, Supply Chain Attack Framework and Attack Patterns, 2013, The MITRE Corporation",
          "external_id": "REF-439",
          "source_name": "reference_from_CAPEC",
          "url": "http://www.mitre.org/sites/default/files/publications/supply-chain-attack-framework-14-0228.pdf"
        }
      ],
      "id": "attack-pattern--bfb711d6-f12d-496e-88b9-2c0184485976",
      "modified": "2019-09-30T00:00:00.000Z",
      "name": "ASIC With Malicious Functionality",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_child_of_refs": [
        "attack-pattern--efb74200-657d-438c-aaff-bbd9644dd72d"
      ],
      "x_capec_domains": [
        "Supply Chain",
        "Hardware"
      ],
      "x_capec_example_instances": [
        "A hardware manufacturer periodically updates its ASIC with new features. The attacker, knowing the manufacturer runs email on a system adjacent to the hardware development systems used for ASIC design, sends a phishing email with a malicious attachment to the manufacturer. When viewed, the malicious attachment installs a backdoor that allows the attacker to remotely compromise the adjacent ASIC development system. The attacker is then able to exfiltrate and alter sensitive data on the ASIC system, allowing for future compromise once a new AISC is deployed at the victim location."
      ],
      "x_capec_likelihood_of_attack": "Low",
      "x_capec_prerequisites": [
        "The attacker must have working knowledge of some if not all of the components involved in the target system as well as the infrastructure and development environment of the manufacturer.",
        "Advanced knowledge about the ASIC installed within the target system."
      ],
      "x_capec_skills_required": {
        "High": "Able to develop and manufacture malicious subroutines for an ASIC environment without degradation of existing functions and processes."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "High",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "The attacker injects, manipulates, deletes, or forges malicious log entries into the log file, in an attempt to mislead an audit of the log file or cover tracks of an attack. Due to either insufficient access controls of the log files or the logging mechanism, the attacker is able to perform such actions.",
      "external_references": [
        {
          "external_id": "CAPEC-268",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/268.html"
        },
        {
          "external_id": "CWE-117",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/117.html"
        },
        {
          "description": "Log Injection",
          "source_name": "OWASP Attacks",
          "url": "https://owasp.org/www-community/attacks/Log_Injection"
        }
      ],
      "id": "attack-pattern--b3eaa7aa-9601-406c-ae82-0a0e2ea16116",
      "modified": "2020-12-17T00:00:00.000Z",
      "name": "Audit Log Manipulation",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--2a6131f7-30af-4529-be4e-bc3b7bf22009"
      ],
      "x_capec_domains": [
        "Software",
        "Hardware"
      ],
      "x_capec_parent_of_refs": [
        "attack-pattern--0b08a46d-d680-4f3d-91ad-f97e00878780",
        "attack-pattern--1dd1397d-816a-4093-86a6-cf28bb32e486"
      ],
      "x_capec_prerequisites": [
        "The target host is logging the action and data of the user.",
        "The target host insufficiently protects access to the logs or logging mechanisms."
      ],
      "x_capec_resources_required": [
        "\n               <xhtml:p>The attacker must understand how the logging mechanism works.</xhtml:p>\n               <xhtml:p>Optionally, the attacker must know the location and the format of individual entries of the log files.</xhtml:p>\n            "
      ],
      "x_capec_status": "Draft",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.",
      "external_references": [
        {
          "external_id": "CAPEC-114",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/114.html"
        },
        {
          "external_id": "CWE-287",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/287.html"
        },
        {
          "external_id": "CWE-1244",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/1244.html"
        },
        {
          "description": "Abuse Elevation Control Mechanism",
          "external_id": "T1548",
          "source_name": "ATTACK",
          "url": "https://attack.mitre.org/wiki/Technique/T1548"
        }
      ],
      "id": "attack-pattern--2e2ed1f8-f736-4fc9-83bc-308595fc6e03",
      "modified": "2022-02-22T00:00:00.000Z",
      "name": "Authentication Abuse",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Meta",
      "x_capec_domains": [
        "Software",
        "Hardware"
      ],
      "x_capec_extended_description": "\n            <xhtml:p>This attack may exploit assumptions made by the target's authentication procedures, such as assumptions regarding trust relationships or assumptions regarding the generation of secret values. This attack differs from Authentication Bypass attacks in that Authentication Abuse allows the attacker to be certified as a valid user through illegitimate means, while Authentication Bypass allows the user to access protected material without ever being certified as an authenticated user. This attack does not rely on prior sessions established by successfully authenticating users, as relied upon for the \"Exploitation of Session Variables, Resource IDs and other Trusted Credentials\" attack patterns.</xhtml:p>\n         ",
      "x_capec_parent_of_refs": [
        "attack-pattern--61baa525-b9a3-4474-98d9-7645906e4cc3",
        "attack-pattern--229804f0-b017-4a26-937b-159da866bf9a"
      ],
      "x_capec_prerequisites": [
        "An authentication mechanism or subsystem implementing some form of authentication such as passwords, digest authentication, security certificates, etc. which is flawed in some way."
      ],
      "x_capec_resources_required": [
        "A client application, command-line access to a binary, or scripting language capable of interacting with the authentication mechanism."
      ],
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Medium",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.",
      "external_references": [
        {
          "external_id": "CAPEC-115",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/115.html"
        },
        {
          "external_id": "CWE-287",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/287.html"
        },
        {
          "description": "Abuse Elevation Control Mechanism",
          "external_id": "T1548",
          "source_name": "ATTACK",
          "url": "https://attack.mitre.org/wiki/Technique/T1548"
        },
        {
          "description": "OWASP Web Security Testing Guide, The Open Web Application Security Project (OWASP)",
          "external_id": "REF-598",
          "source_name": "reference_from_CAPEC",
          "url": "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/04-Testing_for_Bypassing_Authentication_Schema.html"
        }
      ],
      "id": "attack-pattern--8f665166-dfd1-40cb-91e8-b78bee1ceb6a",
      "modified": "2022-02-22T00:00:00.000Z",
      "name": "Authentication Bypass",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Meta",
      "x_capec_can_follow_refs": [
        "attack-pattern--b89511b6-f0fb-4c1d-a884-a0d5a0d82b4e",
        "attack-pattern--ae3f2c33-9018-442e-9cc3-24d65c7f4974",
        "attack-pattern--d845a25b-b140-438c-91d7-30b709bb6e18",
        "attack-pattern--ba694895-a0cf-494e-ace2-bf3488330b80"
      ],
      "x_capec_domains": [
        "Software"
      ],
      "x_capec_extended_description": "\n            <xhtml:p>This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to get to secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</xhtml:p>\n         ",
      "x_capec_parent_of_refs": [
        "attack-pattern--1bc4fd64-65a6-41d4-ac68-8e3692eabe29",
        "attack-pattern--4abd48c8-f737-45db-bd7b-97d989ebd471",
        "attack-pattern--f231b993-ed39-40cf-adfb-9828ddcfc642",
        "attack-pattern--8c806dfa-b8ca-45f9-9f97-09e4b5c1157b",
        "attack-pattern--00268a75-3243-477d-9166-8c78fddf6df6"
      ],
      "x_capec_prerequisites": [
        "An authentication mechanism or subsystem implementing some form of authentication such as passwords, digest authentication, security certificates, etc."
      ],
      "x_capec_resources_required": [
        "A client application, such as a web browser, or a scripting language capable of interacting with the target."
      ],
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Medium",
      "x_capec_version": "3.7"
    },
    {
      "created": "2020-07-30T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "\n            <xhtml:p>An adversary adds data to a file to increase the file size beyond what security tools are capable of handling in an attempt to mask their actions.</xhtml:p>\n            <xhtml:p>In addition to this, adding data to a file also changes the file's hash, frustrating security tools that look for known bad files by their hash.</xhtml:p>\n         ",
      "external_references": [
        {
          "external_id": "CAPEC-655",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/655.html"
        },
        {
          "description": "Obfuscated Files or Information:Binary padding",
          "external_id": "T1027.001",
          "source_name": "ATTACK",
          "url": "https://attack.mitre.org/wiki/Technique/T1027/001"
        }
      ],
      "id": "attack-pattern--cbe9fd1f-4b5d-4a3c-b20b-e49888457338",
      "modified": "2021-06-24T00:00:00.000Z",
      "name": "Avoid Security Tool Identification by Adding Data",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_child_of_refs": [
        "attack-pattern--31b90554-68d8-4950-ac45-89c915a30716"
      ],
      "x_capec_consequences": {
        "Accountability": [
          "Hide Activities",
          "Bypass Protection Mechanism"
        ],
        "Integrity": [
          "Modify Data"
        ]
      },
      "x_capec_domains": [
        "Software"
      ],
      "x_capec_example_instances": [
        "\n               <xhtml:p>Adding data to change the checksum of a file and can be used to avoid hash-based denylists and static anti-virus signatures.</xhtml:p>\n            "
      ],
      "x_capec_likelihood_of_attack": "High",
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "High",
      "x_capec_version": "3.7"
    },
    {
      "created": "2017-01-12T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary suppresses the Border Gateway Protocol (BGP) advertisement for a route so as to render the underlying network inaccessible. The BGP protocol helps traffic move throughout the Internet by selecting the most efficient route between Autonomous Systems (AS), or routing domains. BGP is the basis for interdomain routing infrastructure, providing connections between these ASs. By suppressing the intended AS routing advertisements and/or forcing less effective routes for traffic to ASs, the adversary can deny availability for the target network.",
      "external_references": [
        {
          "external_id": "CAPEC-584",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/584.html"
        },
        {
          "description": "Why is it Taking so Long to Secure Internet Routing?, 2014, ACM",
          "external_id": "REF-465",
          "source_name": "reference_from_CAPEC",
          "url": "https://queue.acm.org/detail.cfm?id=2668966"
        },
        {
          "description": "Beware of BGP Attacks, 2004, ACM SIGCOMM",
          "external_id": "REF-466",
          "source_name": "reference_from_CAPEC",
          "url": "http://www.cc.gatech.edu/~dovrolis/Papers/ccr-bgp.pdf"
        }
      ],
      "id": "attack-pattern--eb0ebb0b-d4e1-4480-87a8-043d6f93c972",
      "modified": "2020-12-17T00:00:00.000Z",
      "name": "BGP Route Disabling",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_child_of_refs": [
        "attack-pattern--795c323b-cae6-4846-99f1-dad3fe0ab8e8"
      ],
      "x_capec_consequences": {
        "Availability": [
          "Other (Disabling a network route at the routing infrastructure level denies availability of that route.)"
        ]
      },
      "x_capec_domains": [
        "Communications",
        "Software"
      ],
      "x_capec_example_instances": [
        "Blackholing: The adversary intentionally references false routing advertisements in order to attract traffic to a particular router so it can be dropped."
      ],
      "x_capec_prerequisites": [
        "The adversary must have control of a router that can modify, drop, or introduce spoofed BGP updates.The adversary can convince"
      ],
      "x_capec_resources_required": [
        "BGP Router"
      ],
      "x_capec_status": "Draft",
      "x_capec_version": "3.7"
    },
    {
      "created": "2015-11-09T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary registers a domain name one bit different than a trusted domain. A BitSquatting attack leverages random errors in memory to direct Internet traffic to adversary-controlled destinations. BitSquatting requires no exploitation or complicated reverse engineering, and is operating system and architecture agnostic. Experimental observations show that BitSquatting popular websites could redirect non-trivial amounts of Internet traffic to a malicious entity.",
      "external_references": [
        {
          "external_id": "CAPEC-611",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/611.html"
        },
        {
          "description": "Artem Dinaburg, Bitsquatting: DNS Hijacking without exploitation, Raytheon",
          "external_id": "REF-485",
          "source_name": "reference_from_CAPEC",
          "url": "http://media.blackhat.com/bh-us-11/Dinaburg/BH_US_11_Dinaburg_Bitsquatting_WP.pdf"
        }
      ],
      "id": "attack-pattern--a69b641a-dff7-4dad-b9b1-e00f80b083a2",
      "modified": "2020-12-17T00:00:00.000Z",
      "name": "BitSquatting",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_can_follow_refs": [
        "attack-pattern--a00c2cc2-bd4f-4594-9ec1-b021b62ac896"
      ],
      "x_capec_can_precede_refs": [
        "attack-pattern--5dec633b-7b10-4bfe-9270-e68b98112285",
        "attack-pattern--0d249bf9-13b3-4c13-9423-bcb1ea73c067"
      ],
      "x_capec_child_of_refs": [
        "attack-pattern--e9d5d2e4-588f-43c1-bc98-73417abbb727"
      ],
      "x_capec_consequences": {
        "Other": [
          "Other (Depending on the intention of the adversary, a successful BitSquatting attack can be leveraged to execute more complex attacks such as cross-site scripting or stealing account credentials.)"
        ]
      },
      "x_capec_domains": [
        "Social Engineering"
      ],
      "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Determine target website: </b>The adversary first determines which website to impersonate, generally one that is trusted and receives a consistent amount of traffic.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Research popular or high traffic websites.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Impersonate trusted domain: </b>In order to impersonate the trusted domain, the adversary needs to register the BitSquatted URL.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Register the BitSquatted domain.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Wait for a user to visit the domain: </b>Finally, the adversary simply waits for a user to be unintentionally directed to the BitSquatted domain.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Simply wait for an error in memory to occur, redirecting the user to the malicious domain.</td></tr></tbody></table></ol></div>",
      "x_capec_likelihood_of_attack": "Low",
      "x_capec_prerequisites": [
        "An adversary requires knowledge of popular or high traffic domains, that could be used to deceive potential targets."
      ],
      "x_capec_skills_required": {
        "Low": "Adversaries must be able to register DNS hostnames/URL’s."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Medium",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary discovers the structure, function, and composition of a type of computer software through black box analysis techniques. 'Black Box' methods involve interacting with the software indirectly, in the absence of direct access to the executable object. Such analysis typically involves interacting with the software at the boundaries of where the software interfaces with a larger execution environment, such as input-output vectors, libraries, or APIs. Black Box Reverse Engineering also refers to gathering physical side effects of a hardware device, such as electromagnetic radiation or sounds.",
      "external_references": [
        {
          "external_id": "CAPEC-189",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/189.html"
        },
        {
          "external_id": "CWE-203",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/203.html"
        },
        {
          "external_id": "CWE-1255",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/1255.html"
        },
        {
          "external_id": "CWE-1300",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/1300.html"
        }
      ],
      "id": "attack-pattern--4ba540ef-b8ad-4bf7-acac-d8855661c4a2",
      "modified": "2022-02-22T00:00:00.000Z",
      "name": "Black Box Reverse Engineering",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--25946b99-9827-40a6-99a4-ca15eea08e5d"
      ],
      "x_capec_domains": [
        "Software",
        "Physical Security",
        "Hardware"
      ],
      "x_capec_parent_of_refs": [
        "attack-pattern--1e333aaf-0029-41ab-b164-590851ff2e9a",
        "attack-pattern--8a2c6c50-26ad-4f1a-a938-25293372f75a",
        "attack-pattern--3d5bbdf7-b642-43b4-b4be-d9f35923380d"
      ],
      "x_capec_resources_required": [
        "Black box methods require (at minimum) the ability to interact with the functional boundaries where the software communicates with a larger processing environment, such as inter-process communication on a host operating system, or via networking protocols."
      ],
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Low",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
      "external_references": [
        {
          "external_id": "CAPEC-7",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/7.html"
        },
        {
          "external_id": "CWE-89",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/89.html"
        },
        {
          "external_id": "CWE-209",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/209.html"
        },
        {
          "external_id": "CWE-74",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/74.html"
        },
        {
          "external_id": "CWE-20",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/20.html"
        },
        {
          "external_id": "CWE-697",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/697.html"
        },
        {
          "external_id": "CWE-707",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/707.html"
        },
        {
          "description": "Blind SQL Injection",
          "source_name": "OWASP Attacks",
          "url": "https://owasp.org/www-community/attacks/Blind_SQL_Injection"
        }
      ],
      "id": "attack-pattern--9116da7f-a60e-4186-b42a-218f1b0eb269",
      "modified": "2021-06-24T00:00:00.000Z",
      "name": "Blind SQL Injection",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_child_of_refs": [
        "attack-pattern--42acc604-a86c-46f7-bd03-6e532c02d85e"
      ],
      "x_capec_consequences": {
        "Availability": [
          "Execute Unauthorized Commands (Run Arbitrary Code)"
        ],
        "Confidentiality": [
          "Read Data",
          "Execute Unauthorized Commands (Run Arbitrary Code)"
        ],
        "Integrity": [
          "Modify Data",
          "Execute Unauthorized Commands (Run Arbitrary Code)"
        ]
      },
      "x_capec_domains": [
        "Software"
      ],
      "x_capec_example_instances": [
        "\n               <xhtml:p>An adversary may try entering something like \"username' AND 1=1; --\" in an input field. If the result is the same as when the adversary entered \"username\" in the field, then the adversary knows that the application is vulnerable to SQL Injection. The adversary can then ask yes/no questions from the database server to extract information from it. For example, the adversary can extract table names from a database using the following types of queries:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username' AND ascii(lower(substring((SELECT TOP 1 name FROM sysobjects WHERE xtype='U'), 1, 1))) > 108\".</xhtml:div>\n               <xhtml:p>If the above query executes properly, then the adversary knows that the first character in a table name in the database is a letter between m and z. If it doesn't, then the adversary knows that the character must be between a and l (assuming of course that table names only contain alphabetic characters). By performing a binary search on all character positions, the adversary can determine all table names in the database. Subsequently, the adversary may execute an actual attack and send something like:</xhtml:p>\n               <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"username'; DROP TABLE trades; --</xhtml:div>\n            ",
        "In the PHP application TimeSheet 1.1, an adversary can successfully retrieve username and password hashes from the database using Blind SQL Injection. If the adversary is aware of the local path structure, the adversary can also remotely execute arbitrary code and write the output of the injected queries to the local path. Blind SQL Injection is possible since the application does not properly sanitize the $_POST['username'] variable in the login.php file. See also: CVE-2006-4705"
      ],
      "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p>[Hypothesize SQL queries in application]<xhtml:p>Generated hypotheses regarding the SQL queries in an application. For example, the adversary may hypothesize that their input is passed directly into a query that looks like:</xhtml:p>\n                  <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"SELECT * FROM orders WHERE ordernum = _____\"or\"SELECT * FROM orders WHERE ordernum IN (_____)\"or\"SELECT * FROM orders WHERE ordernum in (_____) ORDER BY _____\"</xhtml:div>\n                  <xhtml:p>Of course, there are many other possibilities.</xhtml:p>\n               </p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Research types of SQL queries and determine which ones could be used at various places in an application.</td></tr></tbody></table><li> <p>[Determine how to inject information into the queries]<xhtml:p>Determine how to inject information into the queries from the previous step such that the injection does not impact their logic. For example, the following are possible injections for those queries:</xhtml:p>\n                  <xhtml:div style=\"margin-left:10px;\" class=\"informative\">\"5' OR 1=1; --\"and\"5) OR 1=1; --\"and\"ordernum DESC; --\"</xhtml:div>\n               </p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Add clauses to the SQL queries such that the query logic does not change.</td></tr><tr><td>Add delays to the SQL queries in case server does not provide clear error messages (e.g. WAITFOR DELAY '0:0:10' in SQL Server or BENCHMARK(1000000000,MD5(1) in MySQL). If these can be injected into the queries, then the length of time that the server takes to respond reveals whether the query is injectable or not.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Determine user-controllable input susceptible to injection: </b>Determine the user-controllable input susceptible to injection. For each user-controllable input that the adversary suspects is vulnerable to SQL injection, attempt to inject the values determined in the previous step. If an error does not occur, then the adversary knows that the SQL injection was successful.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use web browser to inject input through text fields or through HTTP GET parameters.</td></tr><tr><td>Use a web application debugging tool such as Tamper Data, TamperIE, WebScarab,etc. to modify HTTP POST parameters, hidden fields, non-freeform fields, etc.</td></tr><tr><td>Use network-level packet injection tools such as netcat to inject input</td></tr><tr><td>Use modified client (modified by reverse engineering) to inject input.</td></tr></tbody></table><li> <p> <b>Determine database type: </b>Determines the type of the database, such as MS SQL Server or Oracle or MySQL, using logical conditions as part of the injected queries</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Try injecting a string containing char(0x31)=char(0x31) (this evaluates to 1=1 in SQL Server only)</td></tr><tr><td>Try injecting a string containing 0x313D31 (this evaluates to 1=1 in MySQL only)</td></tr><tr><td>Inject other database-specific commands into input fields susceptible to SQL Injection. The adversary can determine the type of database that is running by checking whether the query executed successfully or not (i.e. whether the adversary received a normal response from the server or not).</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Extract information about database schema: </b>Extract information about database schema by getting the database to answer yes/no questions about the schema.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Automatically extract database schema using a tool such as Absinthe.</td></tr><tr><td>Manually perform the blind SQL Injection to extract desired information about the database schema.</td></tr></tbody></table><li> <p> <b>Exploit SQL Injection vulnerability: </b>Use the information obtained in the previous steps to successfully inject the database in order to bypass checks or modify, add, retrieve or delete data from the database</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use information about how to inject commands into SQL queries as well as information about the database schema to execute attacks such as dropping tables, inserting records, etc.</td></tr></tbody></table></ol></div>",
      "x_capec_likelihood_of_attack": "High",
      "x_capec_prerequisites": [
        "SQL queries used by the application to store, retrieve or modify data.",
        "User-controllable input that is not properly validated by the application as part of SQL queries."
      ],
      "x_capec_resources_required": [
        "None: No specialized resources are required to execute this type of attack."
      ],
      "x_capec_skills_required": {
        "Medium": "Determining the database type and version, as well as the right number and type of parameters to the query being injected in the absence of error messages requires greater skill than reverse-engineering database error messages."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "High",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An application typically makes calls to functions that are a part of libraries external to the application. These libraries may be part of the operating system or they may be third party libraries. It is possible that the application does not handle situations properly where access to these libraries has been blocked. Depending on the error handling within the application, blocked access to libraries may leave the system in an insecure state that could be leveraged by an attacker.",
      "external_references": [
        {
          "external_id": "CAPEC-96",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/96.html"
        },
        {
          "external_id": "CWE-589",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/589.html"
        }
      ],
      "id": "attack-pattern--807e5b36-9da9-4be8-9f6e-5d8c7258cff5",
      "modified": "2021-06-24T00:00:00.000Z",
      "name": "Block Access to Libraries",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_child_of_refs": [
        "attack-pattern--ec0de204-6b66-4c4f-a401-21afa72f3941"
      ],
      "x_capec_consequences": {
        "Access_Control": [
          "Bypass Protection Mechanism"
        ],
        "Authorization": [
          "Bypass Protection Mechanism"
        ],
        "Availability": [
          "Alter Execution Logic"
        ],
        "Confidentiality": [
          "Other",
          "Bypass Protection Mechanism"
        ]
      },
      "x_capec_domains": [
        "Software"
      ],
      "x_capec_example_instances": [
        "A web-based system uses a third party cryptographic random number generation library that derives entropy from machine's hardware. This library is used in generation of user session ids used by the application. If the library is inaccessible, the application instead uses a software based weak pseudo random number generation library. An attacker of the system blocks access of the application to the third party cryptographic random number generation library (by renaming it). The application in turn uses the weak pseudo random number generation library to generate session ids that are predictable. An attacker then leverages this weakness to guess a session id of another user to perform a horizontal elevation of privilege escalation and gain access to another user's account."
      ],
      "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p>Determine what external libraries the application accesses.</p></li></ol></div><div><h3>Experiment</h3><ol><li> <p>Block access to the external libraries accessed by the application.</p></li><li> <p>Monitor the behavior of the system to see if it goes into an insecure/inconsistent state.</p></li><li> <p>If the system does go into an insecure/inconsistent state, leverage that to obtain information about the system functionality or data, elevate access control, etc. The rest of this attack will depend on the context and the desired goal.</p></li></ol></div>",
      "x_capec_likelihood_of_attack": "Medium",
      "x_capec_prerequisites": [
        "An application requires access to external libraries.",
        "An attacker has the privileges to block application access to external libraries."
      ],
      "x_capec_skills_required": {
        "Low": "Knowledge of how to block access to libraries, as well as knowledge of how to leverage the resulting state of the application based on the failed call."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Medium",
      "x_capec_version": "3.7"
    },
    {
      "created": "2015-11-09T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary may attempt to block indicators from leaving the host machine. In the case of network based reporting of indicators, an adversary may block traffic associated with reporting to prevent central station analysis. This may be accomplished by many means such as stopping a local process to creating a host-based firewall rule to block traffic to a specific server.",
      "external_references": [
        {
          "external_id": "CAPEC-571",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/571.html"
        },
        {
          "description": "Impair Defenses:Indicator Blocking",
          "external_id": "T1562.006",
          "source_name": "ATTACK",
          "url": "https://attack.mitre.org/wiki/Technique/T1562/006"
        }
      ],
      "id": "attack-pattern--8f91fa23-b5c4-48f1-be6c-99582524f8cc",
      "modified": "2020-07-30T00:00:00.000Z",
      "name": "Block Logging to Central Repository",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--2a6131f7-30af-4529-be4e-bc3b7bf22009"
      ],
      "x_capec_domains": [
        "Communications",
        "Software"
      ],
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Low",
      "x_capec_version": "3.7"
    },
    {
      "created": "2015-11-09T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary blocks the delivery of an important system resource causing the system to fail or stop working.",
      "external_references": [
        {
          "external_id": "CAPEC-603",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/603.html"
        }
      ],
      "id": "attack-pattern--ec0de204-6b66-4c4f-a401-21afa72f3941",
      "modified": "2019-09-30T00:00:00.000Z",
      "name": "Blockage",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--576968ad-12ef-46d8-bb10-63f496bcaccb"
      ],
      "x_capec_consequences": {
        "Availability": [
          "Other (Blocking a resource from functional operation denies its availability to authorized users.)"
        ]
      },
      "x_capec_domains": [
        "Communications",
        "Software"
      ],
      "x_capec_likelihood_of_attack": "Medium",
      "x_capec_parent_of_refs": [
        "attack-pattern--5a002211-15f2-487f-8a5d-b09150ac1138",
        "attack-pattern--5c216971-78b5-4ac1-9cbe-f46fe1c632d1",
        "attack-pattern--807e5b36-9da9-4be8-9f6e-5d8c7258cff5"
      ],
      "x_capec_prerequisites": [
        "This attack pattern requires knowledge of where important system resources are logically located as well as how they operate."
      ],
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "High",
      "x_capec_version": "3.7"
    },
    {
      "created": "2014-06-23T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "This type of attack against older telephone switches and trunks has been around for decades. A tone is sent by an adversary to impersonate a supervisor signal which has the effect of rerouting or usurping command of the line. While the US infrastructure proper may not contain widespread vulnerabilities to this type of attack, many companies are connected globally through call centers and business process outsourcing. These international systems may be operated in countries which have not upgraded Telco infrastructure and so are vulnerable to Blue boxing. Blue boxing is a result of failure on the part of the system to enforce strong authorization for administrative functions. While the infrastructure is different than standard current applications like web applications, there are historical lessons to be learned to upgrade the access control for administrative functions.",
      "external_references": [
        {
          "external_id": "CAPEC-5",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/5.html"
        },
        {
          "external_id": "CWE-285",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/285.html"
        },
        {
          "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
          "external_id": "REF-1",
          "source_name": "reference_from_CAPEC"
        }
      ],
      "id": "attack-pattern--7b462c1f-e0bf-41a7-b811-2b676c103bda",
      "modified": "2019-04-04T00:00:00.000Z",
      "name": "Blue Boxing",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_child_of_refs": [
        "attack-pattern--9c983530-1927-43ca-addd-63d149cda4a7"
      ],
      "x_capec_consequences": {
        "Access_Control": [
          "Gain Privileges"
        ],
        "Authorization": [
          "Gain Privileges"
        ],
        "Availability": [
          "Resource Consumption (Denial of Service)"
        ],
        "Confidentiality": [
          "Gain Privileges"
        ]
      },
      "x_capec_domains": [
        "Communications",
        "Software"
      ],
      "x_capec_example_instances": [
        "An adversary identifies a vulnerable CCITT-5 phone line, and sends a combination tone to the switch in order to request administrative access. Based on tone and timing parameters the request is verified for access to the switch. Once the adversary has gained control of the switch launching calls, routing calls, and a whole host of opportunities are available."
      ],
      "x_capec_likelihood_of_attack": "Medium",
      "x_capec_prerequisites": [
        "System must use weak authentication mechanisms for administrative functions."
      ],
      "x_capec_resources_required": [
        "CCITT-5 or other vulnerable lines, with the ability to send tones such as combined 2,400 Hz and 2,600 Hz tones to the switch"
      ],
      "x_capec_skills_required": {
        "Low": "Given a vulnerable phone system, the attackers' technical vector relies on attacks that are well documented in cracker 'zines and have been around for decades."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Very High",
      "x_capec_version": "3.7"
    },
    {
      "created": "2021-06-24T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary uses Bluetooth flooding to transfer large packets to Bluetooth enabled devices over the L2CAP protocol with the goal of creating a DoS. This attack must be carried out within close proximity to a Bluetooth enabled device.",
      "external_references": [
        {
          "external_id": "CAPEC-666",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/666.html"
        },
        {
          "external_id": "CWE-404",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/404.html"
        },
        {
          "description": "Amrita Mitra, What is BlueSmack Attack?, 2017--03---08, The Security Buddy",
          "external_id": "REF-655",
          "source_name": "reference_from_CAPEC",
          "url": "https://www.thesecuritybuddy.com/bluetooth-security/what-is-bluesmack-attack/"
        }
      ],
      "id": "attack-pattern--c3ce7043-a2cc-4686-945c-cf3b605b7c90",
      "modified": "2021-06-24T00:00:00.000Z",
      "name": "BlueSmacking",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Standard",
      "x_capec_child_of_refs": [
        "attack-pattern--6854fe89-0829-429f-a95c-89e77ab6c8ed"
      ],
      "x_capec_consequences": {
        "Availability": [
          "Unreliable Execution",
          "Resource Consumption"
        ]
      },
      "x_capec_domains": [
        "Communications",
        "Software"
      ],
      "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Scan for Bluetooth Enabled Devices: </b>Using BlueZ along with an antenna, an adversary searches for devices with Bluetooth on.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Note the MAC address of the device you want to attack.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Change L2CAP Packet Length: </b>The adversary must change the L2CAP packet length to create packets that will overwhelm a Bluetooth enabled device.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>An adversary downloads and installs BlueZ, the standard Bluetooth utility package for Linux.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Flood: </b>An adversary sends the packets to the target device, and floods it until performance is degraded.</p></li></ol></div>",
      "x_capec_likelihood_of_attack": "Medium",
      "x_capec_prerequisites": [
        "The system/application has Bluetooth enabled."
      ],
      "x_capec_skills_required": {
        "Low": "An adversary only needs a Linux machine along with a Bluetooth adapter, which is extremely common."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "Medium",
      "x_capec_version": "3.7"
    },
    {
      "created": "2021-06-24T00:00:00.000Z",
      "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
      "description": "An adversary disguises the MAC address of their Bluetooth enabled device to one for which there exists an active and trusted connection and authenticates successfully. The adversary can then perform malicious actions on the target Bluetooth device depending on the target’s capabilities.",
      "external_references": [
        {
          "external_id": "CAPEC-667",
          "source_name": "capec",
          "url": "https://capec.mitre.org/data/definitions/667.html"
        },
        {
          "external_id": "CWE-290",
          "source_name": "cwe",
          "url": "http://cwe.mitre.org/data/definitions/290.html"
        }
      ],
      "id": "attack-pattern--fcb77578-4d3d-4cb3-ae1d-91c9877a60c5",
      "modified": "2021-06-24T00:00:00.000Z",
      "name": "Bluetooth Impersonation AttackS (BIAS)",
      "object_marking_refs": [
        "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
      ],
      "spec_version": "2.1",
      "type": "attack-pattern",
      "x_capec_abstraction": "Detailed",
      "x_capec_can_follow_refs": [
        "attack-pattern--862d18f1-a87c-4f1b-acc2-882697d5d6e5"
      ],
      "x_capec_child_of_refs": [
        "attack-pattern--e9d5d2e4-588f-43c1-bc98-73417abbb727"
      ],
      "x_capec_consequences": {
        "Confidentiality": [],
        "Integrity": []
      },
      "x_capec_domains": [
        "Social Engineering"
      ],
      "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Find disguise and target: </b>The adversary starts the Bluetooth service on the attacking device and searches for nearby listening devices.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Knowledge of a trusted MAC address.</td></tr><tr><td>Scanning for devices other than the target that may be trusted.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Disguise: </b>Using the MAC address of the device the adversary wants to impersonate, they may use a tool such as spooftooth or macchanger to spoof their Bluetooth address and attempt to authenticate with the target.</p></li></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Use device capabilities to accomplish goal: </b>Finally, if authenticated successfully the adversary can perform tasks/information gathering dependent on the target's capabilities and connections.</p></li></ol></div>",
      "x_capec_likelihood_of_attack": "Medium",
      "x_capec_prerequisites": [
        "Knowledge of a target device's list of trusted connections."
      ],
      "x_capec_skills_required": {
        "Low": "Adversaries must be in close proximity to Bluetooth devices."
      },
      "x_capec_status": "Draft",
      "x_capec_typical_severity": "High",
      "x_capec_version": "3.7"
    }
  ]
}
