{
    "type": "bundle",
    "id": "bundle--aca6376d-0b28-49ba-9e19-a45f1a636794",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to.",
            "external_references": [
                {
                    "external_id": "CAPEC-1",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/1.html"
                },
                {
                    "external_id": "CWE-276",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/276.html"
                },
                {
                    "external_id": "CWE-285",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/285.html"
                },
                {
                    "external_id": "CWE-434",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/434.html"
                },
                {
                    "external_id": "CWE-693",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/693.html"
                },
                {
                    "external_id": "CWE-732",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/732.html"
                },
                {
                    "external_id": "CWE-1191",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1191.html"
                },
                {
                    "external_id": "CWE-1193",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1193.html"
                },
                {
                    "external_id": "CWE-1220",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1220.html"
                },
                {
                    "external_id": "CWE-1297",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1297.html"
                },
                {
                    "external_id": "CWE-1311",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1311.html"
                },
                {
                    "external_id": "CWE-1314",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1314.html"
                },
                {
                    "external_id": "CWE-1315",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1315.html"
                },
                {
                    "external_id": "CWE-1318",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1318.html"
                },
                {
                    "external_id": "CWE-1320",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1320.html"
                },
                {
                    "external_id": "CWE-1321",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1321.html"
                },
                {
                    "external_id": "CWE-1327",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1327.html"
                },
                {
                    "description": "Hijack Execution Flow: ServicesFile Permissions Weakness",
                    "external_id": "T1574.010",
                    "source_name": "ATTACK",
                    "url": "https://attack.mitre.org/wiki/Technique/T1574/010"
                }
            ],
            "id": "attack-pattern--92cdcd3d-d734-4442-afc3-4599f261498b",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "Accessing Functionality Not Properly Constrained by ACLs",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "spec_version": "2.1",
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_can_precede_refs": [
                "attack-pattern--9ad2c2eb-9939-4590-9683-2e789692d262"
            ],
            "x_capec_child_of_refs": [
                "attack-pattern--fd669b7d-0e79-473c-9808-a860dfb0c871"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Gain Privileges"
                ]
            },
            "x_capec_domains": [
                "Software",
                "Hardware"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:p>Implementing the Model-View-Controller (MVC) within Java EE's Servlet paradigm using a \"Single front controller\" pattern that demands that brokered HTTP requests be authenticated before hand-offs to other Action Servlets.</xhtml:p>\n               <xhtml:p>If no security-constraint is placed on those Action Servlets, such that positively no one can access them, the front controller can be subverted.</xhtml:p>\n            "
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey: </b>The attacker surveys the target application, possibly as a valid and authenticated user</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Spidering web sites for all available links</td></tr><tr><td>Brute force guessing of resource names</td></tr><tr><td>Brute force guessing of user names / credentials</td></tr><tr><td>Brute force guessing of function names / actions</td></tr></tbody></table><li> <p> <b>Identify Functionality: </b>At each step, the attacker notes the resource or functionality access mechanism invoked upon performing specific actions</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use the web inventory of all forms and inputs and apply attack data to those inputs.</td></tr><tr><td>Use a packet sniffer to capture and record network traffic</td></tr><tr><td>Execute the software in a debugger and record API calls into the operating system or important libraries. This might occur in an environment other than a production environment, in order to find weaknesses that can be exploited in a production environment.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Iterate over access capabilities: </b>Possibly as a valid user, the attacker then tries to access each of the noted access mechanisms directly in order to perform functions not constrained by the ACLs.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Fuzzing of API parameters (URL parameters, OS API parameters, protocol parameters)</td></tr></tbody></table></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_parent_of_refs": [
                "attack-pattern--74bac7d9-693d-40d2-82bf-eb132f13bcaf",
                "attack-pattern--3ba20dcc-8fec-4d74-a472-eb9694fe8142",
                "attack-pattern--1abd165a-57e9-4b78-9221-7b6fcdc57810",
                "attack-pattern--e8a8a8f5-3ad5-4d3f-a35b-48036147266b"
            ],
            "x_capec_prerequisites": [
                "The application must be navigable in a manner that associates elements (subsections) of the application with ACLs.",
                "The various resources, or individual URLs, must be somehow discoverable by the attacker",
                "The administrator must have forgotten to associate an ACL or has associated an inappropriately permissive ACL with a particular navigable resource."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Low": "In order to discover unrestricted resources, the attacker does not need special tools or skills. They only have to observe the resources or access mechanisms invoked as each action is performed and then try and access those access mechanisms directly."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the system or network. Sensitive functionality should always be protected with access controls. However configuring all but the most trivial access control systems can be very complicated and there are many opportunities for mistakes. If an attacker can learn of incorrectly configured access security settings, they may be able to exploit this in an attack.",
            "external_references": [
                {
                    "external_id": "CAPEC-180",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/180.html"
                },
                {
                    "external_id": "CWE-732",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/732.html"
                },
                {
                    "external_id": "CWE-1190",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1190.html"
                },
                {
                    "external_id": "CWE-1191",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1191.html"
                },
                {
                    "external_id": "CWE-1193",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1193.html"
                },
                {
                    "external_id": "CWE-1220",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1220.html"
                },
                {
                    "external_id": "CWE-1268",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1268.html"
                },
                {
                    "external_id": "CWE-1280",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1280.html"
                },
                {
                    "external_id": "CWE-1297",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1297.html"
                },
                {
                    "external_id": "CWE-1311",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1311.html"
                },
                {
                    "external_id": "CWE-1315",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1315.html"
                },
                {
                    "external_id": "CWE-1318",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1318.html"
                },
                {
                    "external_id": "CWE-1320",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1320.html"
                },
                {
                    "external_id": "CWE-1321",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1321.html"
                },
                {
                    "description": "Hijack Execution Flow: Services File Permissions Weaknesses",
                    "external_id": "T1574.010",
                    "source_name": "ATTACK",
                    "url": "https://attack.mitre.org/wiki/Technique/T1574/010"
                },
                {
                    "description": "Silvio Cesare, Share Library Call Redirection Via ELF PLT Infection (Issue 56), Phrack Magazine, 2000",
                    "external_id": "REF-29",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://phrack.org/issues/56/7.html"
                },
                {
                    "description": "OWASP Top 10 2007 (2007), The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-30",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://www.owasp.org/www-pdf-archive/OWASP_Top_10_2007.pdf"
                }
            ],
            "id": "attack-pattern--aac17300-6cdd-4f50-82c3-da5a01d225ac",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "Exploiting Incorrectly Configured Access Control Security Levels",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "spec_version": "2.1",
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_can_precede_refs": [
                "attack-pattern--9ad2c2eb-9939-4590-9683-2e789692d262"
            ],
            "x_capec_child_of_refs": [
                "attack-pattern--fd669b7d-0e79-473c-9808-a860dfb0c871"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Authorization": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges",
                    "Bypass Protection Mechanism"
                ],
                "Availability": [
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_domains": [
                "Software",
                "Hardware"
            ],
            "x_capec_example_instances": [
                "For example, an incorrectly configured Web server, may allow unauthorized access to it, thus threaten the security of the Web application."
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey: </b>The attacker surveys the target application, possibly as a valid and authenticated user.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Spider the web site for all available links.</td></tr><tr><td>Brute force to guess all function names/action with different privileges.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Identify weak points in access control configurations: </b>The attacker probes the access control for functions and data identified in the Explore phase to identify potential weaknesses in how the access controls are configured.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>The attacker attempts authenticated access to targeted functions and data.</td></tr><tr><td>The attacker attempts unauthenticated access to targeted functions and data.</td></tr><tr><td>The attacker attempts indirect and side channel access to targeted functions and data.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Access the function or data bypassing the access control: </b>The attacker executes the function or accesses the data identified in the Explore phase bypassing the access control.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>The attacker executes the function or accesses the data not authorized to them.</td></tr></tbody></table></ol></div>",
            "x_capec_extended_description": "\n            <xhtml:p>Most commonly, attackers would take advantage of controls that provided too little protection for sensitive activities in order to perform actions that should be denied to them. In some circumstances, an attacker may be able to take advantage of overly restrictive access control policies, initiating denial of services (if an application locks because it unexpectedly failed to be granted access) or causing other legitimate actions to fail due to security. The latter class of attacks, however, is usually less severe and easier to detect than attacks based on inadequate security restrictions. This attack pattern differs from CAPEC 1, \"Accessing Functionality Not Properly Constrained by ACLs\" in that the latter describes attacks where sensitive functionality lacks access controls, where, in this pattern, the access control is present, but incorrectly configured.</xhtml:p>\n         ",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_parent_of_refs": [
                "attack-pattern--74bac7d9-693d-40d2-82bf-eb132f13bcaf",
                "attack-pattern--3ba20dcc-8fec-4d74-a472-eb9694fe8142",
                "attack-pattern--1abd165a-57e9-4b78-9221-7b6fcdc57810",
                "attack-pattern--e8a8a8f5-3ad5-4d3f-a35b-48036147266b",
                "attack-pattern--a8c03df8-2c83-493f-8e92-4c8afac0ed40"
            ],
            "x_capec_prerequisites": [
                "The target must apply access controls, but incorrectly configure them. However, not all incorrect configurations can be exploited by an attacker. If the incorrect configuration applies too little security to some functionality, then the attacker may be able to exploit it if the access control would be the only thing preventing an attacker's access and it no longer does so. If the incorrect configuration applies too much security, it must prevent legitimate activity and the attacker must be able to force others to require this activity.."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Low": "In order to discover unrestricted resources, the attacker does not need special tools or skills. They only have to observe the resources or access mechanisms invoked as each action is performed and then try and access those access mechanisms directly."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.9"
        },
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This pattern of attack is defined by the selection of messages distributed via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one.",
            "external_references": [
                {
                    "external_id": "CAPEC-12",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/12.html"
                },
                {
                    "external_id": "CWE-201",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/201.html"
                },
                {
                    "external_id": "CWE-306",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/306.html"
                }
            ],
            "id": "attack-pattern--d9904019-98fa-4beb-ae5a-f667e516269e",
            "modified": "2022-02-22T00:00:00.000Z",
            "name": "Choosing Message Identifier",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "spec_version": "2.1",
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_child_of_refs": [
                "attack-pattern--861cfb48-ba7c-4568-86c9-43ac6985ac65"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges"
                ]
            },
            "x_capec_domains": [
                "Communications"
            ],
            "x_capec_example_instances": [
                "A certain B2B interface on a large application codes for messages passed over an MQSeries queue, on a single \"Partners\" channel. Messages on that channel code for their client destination based on a partner_ID field, held by each message. That field is a simple integer. Adversaries having access to that channel, perhaps a particularly nosey partner, can simply choose to store messages of another partner's ID and read them as they desire. Note that authentication does not prevent a partner from leveraging this attack on other partners. It simply disallows adversaries without partner status from conducting this attack."
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Determine Nature of Messages: </b>Determine the nature of messages being transported as well as the identifiers to be used as part of the attack</p></li></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Authenticate: </b>If required, authenticate to the distribution channel</p></li><li> <p> <b>Identify Known Client Identifiers: </b>If any particular client's information is available through a control channel available to all users, the adversary will discover particular identifiers for targeted clients by observing this channel, or requesting client information through this channel.</p></li><li> <p> <b>Change Message Identifier: </b>Adversaries with client access connecting to output channels could change their channel identifier and see someone else's (perhaps more privileged) data.</p></li></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_peer_of_refs": [
                "attack-pattern--2351ee64-dd85-4bc3-bb43-aaa2ca5c1228"
            ],
            "x_capec_prerequisites": [
                "Information and client-sensitive (and client-specific) data must be present through a distribution channel available to all users.",
                "Distribution means must code (through channel, message identifiers, or convention) message destination in a manner visible within the distribution means itself (such as a control channel) or in the messages themselves."
            ],
            "x_capec_resources_required": [
                "The adversary needs the ability to control source code or application configuration responsible for selecting which message/channel id is absorbed from the public distribution means."
            ],
            "x_capec_skills_required": {
                "Low": "All the adversary needs to discover is the format of the messages on the channel/distribution means and the particular identifier used within the messages."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ]
}