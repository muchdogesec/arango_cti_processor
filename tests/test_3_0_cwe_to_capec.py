import os
import subprocess
from arango import ArangoClient
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

ARANGO_USERNAME = os.getenv("ARANGODB_USERNAME")
ARANGO_PASSWORD = os.getenv("ARANGODB_PASSWORD")
ARANGODB_HOST_URL = os.getenv("ARANGODB_HOST_URL", "localhost")

client = ArangoClient(hosts=f"{ARANGO_HOST_URL}:{ARANGO_PORT}")

# Run the import script
subprocess.run([
    "python3", "arango_cti_processor.py",
    "--database", "arango_cti_processor_standard_tests_database",
    "--relationship", "cwe-capec",
    "--stix2arango_note", "test03",
    "--ignore_embedded_relationships", "false"
], check=True)

print('Script executed successfully.')

def test_01_auto_imported_objects():
    db = client.db('arango_cti_processor_standard_tests_database', username=ARANGO_USERNAME, password=ARANGO_PASSWORD)
    query = """
      FOR doc IN mitre_cwe_vertex_collection
        FILTER doc._arango_cti_processor_note == "automatically imported object at script runtime"
        RETURN doc.id
    """
    cursor = db.aql.execute(query)
    result_count = [count for count in cursor]

    expected_ids = [
        "marking-definition--2e51a631-99d8-52a5-95a6-8314d3f4fbf3",
        "identity--2e51a631-99d8-52a5-95a6-8314d3f4fbf3"
    ]

    assert result_count == expected_ids, f"Expected {expected_ids}, but found {result_count}."
    print(f"Test passed. Found documents with the specified note: {result_count}")

test_01_auto_imported_objects()

# test 2 Should return all the SROs generated by arango_cti_processor -- expected = 1212

def test_02_arango_cti_processor_note():
    db = client.db('arango_cti_processor_standard_tests_database', username=ARANGO_USERNAME, password=ARANGO_PASSWORD)
    query = """
    RETURN COUNT(
      FOR doc IN mitre_cwe_edge_collection
      FILTER doc._arango_cti_processor_note == "cwe-capec"
        RETURN doc
    )
    """
    cursor = db.aql.execute(query)
    result_count = [count for count in cursor]

    assert result_count == [1212], f"Expected 1212 documents, but found {result_count}."
    print(f"Test passed. Found {result_count[0]} documents with the specified criteria.")

test_02_arango_cti_processor_note()

# checks the corret number of objects are generated, and that they are assigned the correct properties by the script

def test_03_correct_object_properties():
    db = client.db('arango_cti_processor_standard_tests_database', username=ARANGO_USERNAME, password=ARANGO_PASSWORD)
    query = """
    RETURN COUNT(
      FOR doc IN mitre_cwe_edge_collection
        FILTER doc.type == "relationship"
        AND doc.relationship_type == "exploited-using"
        AND doc.created_by_ref == "identity--2e51a631-99d8-52a5-95a6-8314d3f4fbf3"
        AND doc.object_marking_refs == [
          "marking-definition--94868c89-83c2-464b-929b-a1a8aa3c8487",
          "marking-definition--2e51a631-99d8-52a5-95a6-8314d3f4fbf3"
        ]
        AND doc._arango_cti_processor_note == "cwe-capec"
        RETURN doc
    )
    """
    cursor = db.aql.execute(query)
    result_count = [count for count in cursor]

    assert result_count == [1212], f"Expected 1212 documents, but found {result_count}."
    print(f"Test passed. Found {result_count[0]} documents with the specified criteria.")

test_03_correct_object_properties()

# test 4 To check objects are created as expected, you can pick a CWE object with CAPEC references and then check all the SROs 
# e.g. CWE-521 (weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5) which has links to 9 CAPEC IDs;
# CAPEC-112 (`attack-pattern--7b423196-9de6-400f-91de-a1f26b3f19f1`)
# CAPEC-16 (`attack-pattern--a9dc4914-409a-4f71-80df-c5cc3923d112`)
# CAPEC-49 (`attack-pattern--8d88a81c-bde9-4fb3-acbe-901c783d6427`)
# CAPEC-55 (`attack-pattern--a390cb72-b4de-4750-ae05-be556c89f4be`)
# CAPEC-555 (`attack-pattern--06e8782a-87af-4863-b6b1-99e09edda3be`)
# CAPEC-561 (`attack-pattern--f2654def-b86d-4ddb-888f-de6b50a103a2`)
# CAPEC-565 (`attack-pattern--f724f0f3-20e6-450c-be4a-f373ea08834d`)
# CAPEC-70 (`attack-pattern--8c7bab16-5ecd-4778-9b04-c185bceed170`)
# CAPEC-509 (`attack-pattern--9197c7a2-6a03-40da-b2a6-df5f1d69e8fb`)

def test_04_correct_relationship_cwe521():
    db = client.db('arango_cti_processor_standard_tests_database', username=ARANGO_USERNAME, password=ARANGO_PASSWORD)
    query = """
        FOR doc IN mitre_cwe_edge_collection
          FILTER doc._is_latest == true
          AND doc._arango_cti_processor_note == "cwe-capec"
          AND doc.source_ref == "weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5"
          RETURN doc.target_ref
    """
    cursor = db.aql.execute(query)
    result_count = [count for count in cursor]

    expected_ids = [
        "attack-pattern--7b423196-9de6-400f-91de-a1f26b3f19f1", # CAPEC-112
        "attack-pattern--a9dc4914-409a-4f71-80df-c5cc3923d112", # CAPEC-16
        "attack-pattern--8d88a81c-bde9-4fb3-acbe-901c783d6427", # CAPEC-49
        "attack-pattern--a390cb72-b4de-4750-ae05-be556c89f4be", # CAPEC-55
        "attack-pattern--06e8782a-87af-4863-b6b1-99e09edda3be", # CAPEC-555
        "attack-pattern--f2654def-b86d-4ddb-888f-de6b50a103a2", # CAPEC-561
        "attack-pattern--f724f0f3-20e6-450c-be4a-f373ea08834d", # CAPEC-565
        "attack-pattern--8c7bab16-5ecd-4778-9b04-c185bceed170", # CAPEC-70
        "attack-pattern--9197c7a2-6a03-40da-b2a6-df5f1d69e8fb" # CAPEC-509
    ]

    assert result_count == expected_ids, f"Expected {expected_ids}, but found {result_count}."
    print(f"Test passed. Found documents with the specified note: {result_count}")

test_04_correct_relationship_cwe521()

# test 5 is an extension of test 4 but checks relationship ids

# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--7b423196-9de6-400f-91de-a1f26b3f19f1` = 4dc4d3f4-b7f6-5734-8ae2-e6d9de419f9d
# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--a9dc4914-409a-4f71-80df-c5cc3923d112` = cfbfb721-5689-5be0-928c-ef88c885320d
# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--8d88a81c-bde9-4fb3-acbe-901c783d6427` = 93dffeb4-05f2-5bb4-a84c-cb6c7da0481b
# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--a390cb72-b4de-4750-ae05-be556c89f4be` = 6bd7ac75-d10c-5cf3-93c1-ad6cabe01ffd
# `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--06e8782a-87af-4863-b6b1-99e09edda3be` = 214cc86d-9174-5899-8755-6cee2f86f1ae
# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--f2654def-b86d-4ddb-888f-de6b50a103a2` = 51442cc4-8257-54bd-8d83-adb6efbbaccb
# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--f724f0f3-20e6-450c-be4a-f373ea08834d` = fc86cb32-5f2a-5561-b05e-56ce9e5d3bba
# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--8c7bab16-5ecd-4778-9b04-c185bceed170` = 6a2b5b44-9597-5563-a890-bf0be8a76d10
# `2e51a631-99d8-52a5-95a6-8314d3f4fbf3` `exploited-using+mitre_cwe_vertex_collection/weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5+mitre_capec_vertex_collection/attack-pattern--9197c7a2-6a03-40da-b2a6-df5f1d69e8fb` = 016c2ba9-4348-538b-ad28-24ac312ac69a

def test_05_correct_relationship_cwe521_ids():
    db = client.db('arango_cti_processor_standard_tests_database', username=ARANGO_USERNAME, password=ARANGO_PASSWORD)
    query = """
        FOR doc IN mitre_cwe_edge_collection
          FILTER doc._is_latest == true
          AND doc._arango_cti_processor_note == "cwe-capec"
          AND doc.source_ref == "weakness--e7a435fe-cc39-5a78-a362-eecdc61c80e5"
          RETURN doc.id
    """
    cursor = db.aql.execute(query)
    result_count = [count for count in cursor]

    expected_ids = [
        "relationship--4dc4d3f4-b7f6-5734-8ae2-e6d9de419f9d", # CAPEC-112
        "relationship--cfbfb721-5689-5be0-928c-ef88c885320d", # CAPEC-16
        "relationship--93dffeb4-05f2-5bb4-a84c-cb6c7da0481b", # CAPEC-49
        "relationship--6bd7ac75-d10c-5cf3-93c1-ad6cabe01ffd", # CAPEC-55
        "relationship--214cc86d-9174-5899-8755-6cee2f86f1ae", # CAPEC-555
        "relationship--51442cc4-8257-54bd-8d83-adb6efbbaccb", # CAPEC-561
        "relationship--fc86cb32-5f2a-5561-b05e-56ce9e5d3bba", # CAPEC-565
        "relationship--6a2b5b44-9597-5563-a890-bf0be8a76d10", # CAPEC-70
        "relationship--016c2ba9-4348-538b-ad28-24ac312ac69a" # CAPEC-509
    ]

    assert result_count == expected_ids, f"Expected {expected_ids}, but found {result_count}."
    print(f"Test passed. Found documents with the specified note: {result_count}")

test_05_correct_relationship_cwe521_ids()
